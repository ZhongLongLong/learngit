{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Star.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAA0B,wBAAY;IADtC;QAAA,qEAkDC;QA/CG,0BAA0B;QAElB,gBAAU,GAAQ,CAAC,CAAC;QACpB,UAAI,GAAM,IAAI,CAAC;;IA4C3B,CAAC;IA1CU,mBAAI,GAAX,UAAY,IAAS;QACjB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACnB,CAAC;IAED,gCAAiB,GAAjB;QACI,kBAAkB;QAClB,IAAI,SAAS,GAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QACjD,iBAAiB;QACjB,IAAI,IAAI,GAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,SAAS,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,uBAAQ,GAAR;QACI,+BAA+B;QAC/B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACzB,cAAc;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACtB,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,qBAAM,GAAN,UAAO,EAAS;QACZ,sBAAsB;QACtB,IAAG,IAAI,CAAC,iBAAiB,EAAE,GAAC,IAAI,CAAC,UAAU,EAAC;YACxC,QAAQ;YACR,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,OAAO;SACV;QACD,uBAAuB;QACvB,IAAI,YAAY,GAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC1D,IAAI,UAAU,GAAC,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,UAAU,GAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAC,CAAC,GAAG,GAAC,UAAU,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,wBAAwB;IAExB,eAAe;IAEf,oBAAK,GAAL;IAEA,CAAC;IA3CD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;4CACO;IAJnB,IAAI;QADhB,OAAO;OACK,IAAI,CAiDhB;IAAD,WAAC;CAjDD,AAiDC,CAjDyB,EAAE,CAAC,SAAS,GAiDrC;AAjDY,oBAAI","file":"","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["import { Game } from \"./Game\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class Star extends cc.Component {\r\n\r\n    //星星和主角之间的间距小于这个数值时，就会完成收集\r\n    @property(cc.Integer)\r\n    private pickRadius:number=0;\r\n    private game:Game=null;\r\n\r\n    public init(game:Game){\r\n        this.game=game;\r\n    }\r\n\r\n    getPlayerDistance(){\r\n        //根据player节点位置判断距离\r\n        let playerPos=this.game.playerNode.getPosition();\r\n        //根据两点位置计算两点之间的距离\r\n        let dist=cc.pDistance(this.node.position,playerPos);\r\n        return dist;\r\n    }\r\n\r\n    onPicked(){\r\n        //当星星被收集时，调用Game脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        //调用Game脚本得分方法\r\n        this.game.gainScore();\r\n        //然后销毁当前星星节点\r\n        this.node.destroy();\r\n    }\r\n\r\n    update(dt:number){\r\n        //每帧判断和主角之间的距离是否小于收集距离\r\n        if(this.getPlayerDistance()<this.pickRadius){\r\n            //调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        //根据Game脚本中的计时器更新星星的透明度\r\n        let opacityRatio=1-this.game.timer/this.game.starDuration;\r\n        let minOpacity=50;\r\n        this.node.opacity=minOpacity+Math.floor(opacityRatio*(255-minOpacity));\r\n    }\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n}\r\n"]}